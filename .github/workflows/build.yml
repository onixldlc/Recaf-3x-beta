name: CI

on:
  push:
    branches:
      - archive_3_x
  pull_request:
    branches:
      - archive_3_x

permissions:
  checks: write
  pull-requests: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # Alternative for testing on multiple platforms. Ubuntu runs the quickest with the latest JVM.
        #   os: [ubuntu-latest, windows-latest, macos-latest]
        #   java-version: [11, 17]
        os: [ ubuntu-latest ]
        java-version: [ 17 ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: adopt-hotspot
          java-version: ${{ matrix.java-version }}
          
      - run: ./gradlew --info build
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Event File
          retention-days: 21
          path: |
            **/TEST-*
            **/hs_err_pid*

      - name: Build project
        run: ./gradlew build
        
      - name: Extract project version to environment variable
        run: echo "PROJECT_VERSION=$(./gradlew properties | grep -Po '(?<=version\W ).*')" >> $GITHUB_ENV

      # Get the current date and time in the new format
      - name: Get current date and time
        run: echo "RELEASE_TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Check the package version has corresponding Git tag
        id: tagged
        shell: bash
        run: |
          git show-ref --tags --verify --quiet -- "refs/tags/${{ env.PROJECT_VERSION }}" && echo "tagExists=1" >> $GITHUB_OUTPUT || echo "tagExists=0" >> $GITHUB_OUTPUT
          git show-ref --tags --verify --quiet -- "refs/tags/${{ env.PROJECT_VERSION }}" && echo "Tag for current version exists" || echo "Tag for current version does not exist"
  
      - name: Abort if tag exists, or existence check fails
        if: ${{ false && steps.tagged.outputs.tagExists }}
        run: |
          echo "Output of 'tagged' step: ${{ steps.tagged.outputs.tagExists }}"
          echo "Failed to check if tag exists."
          echo "PROJECT_VERSION: ${{ env.PROJECT_VERSION }}"
          echo "Tags $(git tag | wc -l):"
          git tag
          git show-ref --tags --verify -- "refs/tags/${{ env.PROJECT_VERSION }}"
          exit 1

      - name: Check All Builds
        run: |
          ls ./recaf-ui/build/libs/
        
       # Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name:   
            ${{ env.PROJECT_VERSION }}
          release_name: Release ${{ env.PROJECT_VERSION }}-${{ env.RELEASE_TIMESTAMP }} 
          body:   
            Release ${{ env.PROJECT_VERSION }}
          draft: false
          prerelease: false
  
      # Upload the JAR file directly as a release asset
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url:   
            ${{ steps.create_release.outputs.upload_url }}
          # Use the JAR file path from the image, replacing {VERSION}
          asset_path: ./recaf-ui/build/libs/recaf-ui-${{ env.PROJECT_VERSION }}-all.jar 
          asset_name: recaf-ui-${{ env.PROJECT_VERSION }}-all.jar
          asset_content_type: application/java-archive
